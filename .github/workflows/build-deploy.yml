name: CI and Deployment Pipeline

on:
  push:
    branches: [ "main" ]  # Exécute le workflow pour chaque push sur la branche "main"

jobs:
  # Job 1: Construction des images Docker
  build:
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Récupérer le code du repository GitHub
      - uses: actions/checkout@v4

      # Étape 2: Connexion au registre de conteneurs Scaleway
      - name: Login to Scaleway Container Registry
        uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCALEWAY_API_KEY }}  # Utilise la clé API stockée en secret
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}

      # Étape 3: Construction et push de l'image frontend
      - name: Build frontend Docker image
        run: docker build ./frontend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontend:latest

      - name: Push frontend Docker image
        run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontend:latest

      # Étape 4: Construction et push de l'image backend
      - name: Build backend Docker image
        run: docker build ./backend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend:latest

      - name: Push backend Docker image
        run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend:latest

  # Job 2: Déploiement sur le serveur distant
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ce job dépend du job "build" (attend la construction des images)
    steps:
      # Étape 1: Transférer le fichier docker-compose.yml vers le serveur distant
      - name: Transfer docker-compose.yml to remote server
        uses: appleboy/scp-action@v0.1.4  # Utilise l'action SCP pour transférer des fichiers via SSH
        with:
          host: ${{ secrets.DEPLOYMENT_SERVER_IP }}  # Adresse IP du serveur distant
          username: ${{ secrets.DEPLOYMENT_USER }}  # Nom d'utilisateur du serveur
          key: ${{ secrets.DEPLOYMENT_SSH_KEY }}  # Clé SSH privée pour l'authentification
          source: './docker-compose.yml'  # Chemin du fichier local
          target: '/home/Jaures/' # Chemin sur le serveur
          debug: true

      # Étape 2: Connexion et déploiement avec Docker Compose
      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6  # Utilise l'action SSH pour exécuter des commandes sur le serveur distant
        with:
          host: ${{ secrets.DEPLOYMENT_SERVER_IP }}  # Adresse IP du serveur distant
          username: ${{ secrets.DEPLOYMENT_USER }}  # Nom d'utilisateur
          key: ${{ secrets.DEPLOYMENT_SSH_KEY }}  # Clé SSH pour l'authentification
          script: |
            echo "Pulling images and deploying services..."
            cd /home/Jaures
            docker-compose pull  # Télécharge les dernières images Docker du registre
            docker-compose down || true  # Arrête les anciens conteneurs s'ils existent
            docker-compose up -d  # Démarre les nouveaux conteneurs en arrière-plan
