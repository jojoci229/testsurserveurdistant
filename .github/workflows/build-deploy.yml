name: CI and Deployment Pipeline

on:
  push:
    branches: [ "main" ]  # Exécute le workflow pour chaque push sur la branche "main"

jobs:
  # Job 1: Construction des images Docker
  build:
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Récupérer le code du repository GitHub
      - uses: actions/checkout@v4

      # Étape 2: Connexion au registre de conteneurs Scaleway
      - name: Login to Scaleway Container Registry
        uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCALEWAY_API_KEY }}  # Utilise la clé API stockée en secret
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}

      # Étape 3: Construction et push de l'image frontend
      - name: Build frontend Docker image
        run: docker build ./frontend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontend:latest

      - name: Push frontend Docker image
        run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontend:latest

      # Étape 4: Construction et push de l'image backend
      - name: Build backend Docker image
        run: docker build ./backend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend:latest

      - name: Push backend Docker image
        run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend:latest

  # Job 2: Déploiement sur le serveur distant
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Transfer docker-compose.yml to remote server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOYMENT_SERVER_IP }}
          username: ${{ secrets.DEPLOYMENT_USER }}
          key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          source: './docker-compose.yml'
          target: '/home/Jaures'

      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DEPLOYMENT_SERVER_IP }}
          username: ${{ secrets.DEPLOYMENT_USER }}
          key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          script: |
            export FRONTEND_IMAGE="${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontend:latest"
            export BACKEND_IMAGE="${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend:latest"
            cd /home/Jaures
            docker-compose pull
            docker-compose down || true
            docker-compose up -d
